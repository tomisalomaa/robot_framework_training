<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.2 (Python 3.8.5 on win32)" generated="20211124 14:52:24.014" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="D:\koodi\robot-browser-lib-tests\tests\tests.robot">
<test id="s1-t1" name="Cycle themes between auto, night and day">
<kw name="Allow Necessary Cookies" library="res_hltv_common" type="SETUP">
<kw name="New Page" library="Browser">
<arg>${URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20211124 14:52:26.379" level="INFO">Successfully initialized new page object and opened url: https://www.hltv.org/</msg>
<msg timestamp="20211124 14:52:26.379" level="INFO">No browser and context was open. New browser and context was automatically opened when page is created.</msg>
<status status="PASS" starttime="20211124 14:52:24.727" endtime="20211124 14:52:26.379"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//div[@id="CybotCookiebotDialog"]</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20211124 14:52:27.544" level="INFO">Waited for Element with selector //div[@id="CybotCookiebotDialog"] at state visible</msg>
<status status="PASS" starttime="20211124 14:52:26.379" endtime="20211124 14:52:27.544"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[@id="CybotCookiebotDialogBodyLevelButtonLevelOptinAllowallSelection"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:27.544" endtime="20211124 14:52:27.740"/>
</kw>
<status status="PASS" starttime="20211124 14:52:24.727" endtime="20211124 14:52:27.740"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//i[@class="fa fa-caret-down"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:27.740" endtime="20211124 14:52:27.806"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:27.990" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:27.807" endtime="20211124 14:52:27.990"/>
</kw>
<kw name="Change Theme From Auto To Night">
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-auto selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>True</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:27.991" endtime="20211124 14:52:28.006"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[@id="popupsettings"]/div[2]/span[2]/span[contains(text(), "Night")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.007" endtime="20211124 14:52:28.060"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-day selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>False</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.060" endtime="20211124 14:52:28.256"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-auto selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>False</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.256" endtime="20211124 14:52:28.359"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-night selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>True</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.359" endtime="20211124 14:52:28.366"/>
</kw>
<status status="PASS" starttime="20211124 14:52:27.990" endtime="20211124 14:52:28.366"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:28.518" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-2.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:28.366" endtime="20211124 14:52:28.518"/>
</kw>
<kw name="Change Theme From Night To Day">
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-night selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>True</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.520" endtime="20211124 14:52:28.527"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[@id="popupsettings"]/div[2]/span[2]/span[contains(text(), "Day")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.527" endtime="20211124 14:52:28.569"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-night selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>False</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.569" endtime="20211124 14:52:28.690"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-auto selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>False</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.690" endtime="20211124 14:52:28.797"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-day selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>True</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:28.797" endtime="20211124 14:52:28.805"/>
</kw>
<status status="PASS" starttime="20211124 14:52:28.520" endtime="20211124 14:52:28.805"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:29.004" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-3.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:28.805" endtime="20211124 14:52:29.004"/>
</kw>
<kw name="Change Theme From Day To Auto">
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-day selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>True</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:29.005" endtime="20211124 14:52:29.017"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[@id="popupsettings"]/div[2]/span[2]/span[contains(text(), "Auto")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:29.017" endtime="20211124 14:52:29.205"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-day selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>False</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:29.205" endtime="20211124 14:52:29.308"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-night selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>False</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:29.308" endtime="20211124 14:52:29.410"/>
</kw>
<kw name="Get Element State" library="Browser">
<arg>//span[contains(@class, "userTheme-auto selected")]</arg>
<arg>attached</arg>
<arg>==</arg>
<arg>True</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the given state from the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:29.411" endtime="20211124 14:52:29.417"/>
</kw>
<status status="PASS" starttime="20211124 14:52:29.004" endtime="20211124 14:52:29.417"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:29.570" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-4.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:29.418" endtime="20211124 14:52:29.570"/>
</kw>
<status status="PASS" starttime="20211124 14:52:24.725" endtime="20211124 14:52:29.571"/>
</test>
<test id="s1-t2" name="View today's latest match">
<kw name="Allow Necessary Cookies" library="res_hltv_common" type="SETUP">
<kw name="New Page" library="Browser">
<arg>${URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20211124 14:52:30.898" level="INFO">Successfully initialized new page object and opened url: https://www.hltv.org/</msg>
<msg timestamp="20211124 14:52:30.898" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20211124 14:52:29.595" endtime="20211124 14:52:30.898"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//div[@id="CybotCookiebotDialog"]</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20211124 14:52:32.057" level="INFO">Waited for Element with selector //div[@id="CybotCookiebotDialog"] at state visible</msg>
<status status="PASS" starttime="20211124 14:52:30.898" endtime="20211124 14:52:32.057"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[@id="CybotCookiebotDialogBodyLevelButtonLevelOptinAllowallSelection"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:32.057" endtime="20211124 14:52:32.252"/>
</kw>
<status status="PASS" starttime="20211124 14:52:29.595" endtime="20211124 14:52:32.252"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>selector=xpath=//div[@class="rightCol"]/aside/div[@class="top-border-hide"]/a[1]</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:32.348" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-5.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:32.253" endtime="20211124 14:52:32.348"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${team1}</var>
<arg>//div[@class="rightCol"]/aside/div[@class="top-border-hide"]/a[1]//div[@class="teamrow"][1]//span[@class="team"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20211124 14:52:32.389" level="INFO">${team1} = Vitality</msg>
<status status="PASS" starttime="20211124 14:52:32.349" endtime="20211124 14:52:32.389"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${team2}</var>
<arg>//div[@class="rightCol"]/aside/div[@class="top-border-hide"]/a[1]//div[@class="teamrow"][2]//span[@class="team"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20211124 14:52:32.421" level="INFO">${team2} = Liquid</msg>
<status status="PASS" starttime="20211124 14:52:32.390" endtime="20211124 14:52:32.421"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//div[@class="rightCol"]/aside/div[@class="top-border-hide"]/a[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:32.422" endtime="20211124 14:52:32.598"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>//div[@class="team1-gradient"]//div[@class="teamName"]</arg>
<arg>==</arg>
<arg>${team1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:32.599" endtime="20211124 14:52:33.568"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>//div[@class="team2-gradient"]//div[@class="teamName"]</arg>
<arg>==</arg>
<arg>${team2}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:33.569" endtime="20211124 14:52:33.659"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:33.850" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-6.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:33.659" endtime="20211124 14:52:33.850"/>
</kw>
<status status="PASS" starttime="20211124 14:52:29.593" endtime="20211124 14:52:33.852"/>
</test>
<test id="s1-t3" name="View latest recent forum activity">
<kw name="Allow Necessary Cookies" library="res_hltv_common" type="SETUP">
<kw name="New Page" library="Browser">
<arg>${URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20211124 14:52:35.086" level="INFO">Successfully initialized new page object and opened url: https://www.hltv.org/</msg>
<msg timestamp="20211124 14:52:35.086" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20211124 14:52:33.885" endtime="20211124 14:52:35.086"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//div[@id="CybotCookiebotDialog"]</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20211124 14:52:36.164" level="INFO">Waited for Element with selector //div[@id="CybotCookiebotDialog"] at state visible</msg>
<status status="PASS" starttime="20211124 14:52:35.087" endtime="20211124 14:52:36.164"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[@id="CybotCookiebotDialogBodyLevelButtonLevelOptinAllowallSelection"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:36.165" endtime="20211124 14:52:36.353"/>
</kw>
<status status="PASS" starttime="20211124 14:52:33.885" endtime="20211124 14:52:36.353"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>selector=xpath=//div[@class="right2Col"]/aside[1]</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:36.452" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-7.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:36.353" endtime="20211124 14:52:36.453"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${title}</var>
<arg>//div[@class="right2Col"]/aside[1]/div[@class="col-box-con"]//a[1]/span[@title]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20211124 14:52:36.472" level="INFO">${title} = liquid done?</msg>
<status status="PASS" starttime="20211124 14:52:36.453" endtime="20211124 14:52:36.472"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//div[@class="right2Col"]/aside[1]/div[@class="col-box-con"]//a[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:36.473" endtime="20211124 14:52:36.723"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>//div[@class="topic"]</arg>
<arg>==</arg>
<arg>${title}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:36.724" endtime="20211124 14:52:37.180"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:37.299" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-8.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:37.180" endtime="20211124 14:52:37.299"/>
</kw>
<status status="PASS" starttime="20211124 14:52:33.883" endtime="20211124 14:52:37.300"/>
</test>
<test id="s1-t4" name="Filter recent activity to sport and view the top activity">
<kw name="Allow Necessary Cookies" library="res_hltv_common" type="SETUP">
<kw name="New Page" library="Browser">
<arg>${URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20211124 14:52:38.505" level="INFO">Successfully initialized new page object and opened url: https://www.hltv.org/</msg>
<msg timestamp="20211124 14:52:38.505" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20211124 14:52:37.320" endtime="20211124 14:52:38.505"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//div[@id="CybotCookiebotDialog"]</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20211124 14:52:39.574" level="INFO">Waited for Element with selector //div[@id="CybotCookiebotDialog"] at state visible</msg>
<status status="PASS" starttime="20211124 14:52:38.505" endtime="20211124 14:52:39.574"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[@id="CybotCookiebotDialogBodyLevelButtonLevelOptinAllowallSelection"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:39.575" endtime="20211124 14:52:39.767"/>
</kw>
<status status="PASS" starttime="20211124 14:52:37.319" endtime="20211124 14:52:39.767"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>selector=xpath=//div[@class="right2Col"]/aside[1]</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:39.870" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-9.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:39.768" endtime="20211124 14:52:39.870"/>
</kw>
<kw name="Test That The Sport Filter Is Inactive">
<kw name="Get Element Count" library="Browser">
<arg>xpath=//div[@class="right2Col"]/aside[1]//div[@class="pro-mode-toggle promode-disabled"]</arg>
<arg>==</arg>
<arg>1</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:39.871" endtime="20211124 14:52:39.885"/>
</kw>
<kw name="Get Element Count" library="Browser">
<arg>xpath=//div[@class="right2Col"]/aside[1]//div[@class="pro-mode-toggle promode-enabled"]</arg>
<arg>==</arg>
<arg>0</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:39.886" endtime="20211124 14:52:39.892"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>selector=xpath=//div[@class="right2Col"]/aside[1]//div[@class="pro-mode-toggle promode-disabled"]</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:39.964" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-10.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:39.892" endtime="20211124 14:52:39.964"/>
</kw>
<status status="PASS" starttime="20211124 14:52:39.871" endtime="20211124 14:52:39.964"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//div[@class="right2Col"]/aside[1]//div[@class="pro-mode-toggle promode-disabled"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:39.966" endtime="20211124 14:52:40.051"/>
</kw>
<kw name="Test That The Sport Filter Is Active">
<kw name="Get Element Count" library="Browser">
<arg>xpath=//div[@class="right2Col"]/aside[1]//div[@class="pro-mode-toggle promode-disabled"]</arg>
<arg>==</arg>
<arg>0</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:40.052" endtime="20211124 14:52:40.058"/>
</kw>
<kw name="Get Element Count" library="Browser">
<arg>xpath=//div[@class="right2Col"]/aside[1]//div[@class="pro-mode-toggle promode-enabled"]</arg>
<arg>==</arg>
<arg>1</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:40.058" endtime="20211124 14:52:40.067"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>selector=xpath=//div[@class="right2Col"]/aside[1]//div[@class="pro-mode-toggle promode-enabled"]</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:40.231" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-11.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-11.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:40.067" endtime="20211124 14:52:40.231"/>
</kw>
<status status="PASS" starttime="20211124 14:52:40.051" endtime="20211124 14:52:40.231"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>selector=xpath=//div[@class="right2Col"]/aside[1]</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:40.333" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-12.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-12.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:40.233" endtime="20211124 14:52:40.333"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${matchName}</var>
<arg>//div[@class="right2Col"]//div[@class="activitylist"]/a[contains(@href, "/matches")][1]/span</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20211124 14:52:40.348" level="INFO">${matchName} = Vitality vs Liquid</msg>
<status status="PASS" starttime="20211124 14:52:40.333" endtime="20211124 14:52:40.348"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${team1}</var>
<arg>${matchName}</arg>
<arg>${SPACE}</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20211124 14:52:40.349" level="INFO">${team1} = Vitality</msg>
<status status="PASS" starttime="20211124 14:52:40.348" endtime="20211124 14:52:40.349"/>
</kw>
<kw name="Fetch From Right" library="String">
<var>${team2}</var>
<arg>${matchName}</arg>
<arg>${SPACE}</arg>
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<msg timestamp="20211124 14:52:40.349" level="INFO">${team2} = Liquid</msg>
<status status="PASS" starttime="20211124 14:52:40.349" endtime="20211124 14:52:40.349"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//div[@class="right2Col"]//div[@class="activitylist"]/a[contains(@href, "/matches")][1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:40.349" endtime="20211124 14:52:40.484"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>//div[@class="team1-gradient"]//div[@class="teamName"]</arg>
<arg>==</arg>
<arg>${team1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:40.484" endtime="20211124 14:52:41.396"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>//div[@class="team2-gradient"]//div[@class="teamName"]</arg>
<arg>==</arg>
<arg>${team2}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:41.396" endtime="20211124 14:52:41.500"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:41.672" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-13.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-13.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:41.501" endtime="20211124 14:52:41.672"/>
</kw>
<status status="PASS" starttime="20211124 14:52:37.317" endtime="20211124 14:52:41.673"/>
</test>
<test id="s1-t5" name="Choose the final replay among the latest">
<kw name="Allow Necessary Cookies" library="res_hltv_common" type="SETUP">
<kw name="New Page" library="Browser">
<arg>${URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20211124 14:52:43.039" level="INFO">Successfully initialized new page object and opened url: https://www.hltv.org/</msg>
<msg timestamp="20211124 14:52:43.039" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20211124 14:52:41.692" endtime="20211124 14:52:43.040"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//div[@id="CybotCookiebotDialog"]</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20211124 14:52:44.146" level="INFO">Waited for Element with selector //div[@id="CybotCookiebotDialog"] at state visible</msg>
<status status="PASS" starttime="20211124 14:52:43.040" endtime="20211124 14:52:44.146"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[@id="CybotCookiebotDialogBodyLevelButtonLevelOptinAllowallSelection"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:44.146" endtime="20211124 14:52:44.333"/>
</kw>
<status status="PASS" starttime="20211124 14:52:41.692" endtime="20211124 14:52:44.333"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>selector=xpath=//a[contains(text(),"LATEST REPLAYS")]/../..</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:44.451" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-14.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-14.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:44.333" endtime="20211124 14:52:44.452"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<arg>selector=xpath=//a[contains(text(),"LATEST REPLAYS")]/../..//a[@class="col-box a-reset"][last()]</arg>
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:44.548" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-15.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-15.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:44.452" endtime="20211124 14:52:44.548"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${team1}</var>
<arg>//a[contains(text(), "LATEST REPLAYS")]/../..//a[contains(@href, "/matches")][last()]//div[@class="teamrow"][1]//span</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20211124 14:52:44.567" level="INFO">${team1} = DBL PONEY</msg>
<status status="PASS" starttime="20211124 14:52:44.549" endtime="20211124 14:52:44.567"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${team2}</var>
<arg>//a[contains(text(), "LATEST REPLAYS")]/../..//a[contains(@href, "/matches")][last()]//div[@class="teamrow"][2]//span</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20211124 14:52:44.580" level="INFO">${team2} = Wisla Krakow</msg>
<status status="PASS" starttime="20211124 14:52:44.568" endtime="20211124 14:52:44.580"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), "LATEST REPLAYS")]/../..//a[contains(@href, "/matches")][last()]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:44.581" endtime="20211124 14:52:44.740"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>//div[@class="team1-gradient"]//div[@class="teamName"]</arg>
<arg>==</arg>
<arg>${team1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:44.741" endtime="20211124 14:52:45.438"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>//div[@class="team2-gradient"]//div[@class="teamName"]</arg>
<arg>==</arg>
<arg>${team2}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="PASS" starttime="20211124 14:52:45.439" endtime="20211124 14:52:45.554"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window or element and saves it to disk.</doc>
<msg timestamp="20211124 14:52:45.680" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-16.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-16.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20211124 14:52:45.554" endtime="20211124 14:52:45.680"/>
</kw>
<status status="PASS" starttime="20211124 14:52:41.690" endtime="20211124 14:52:45.686"/>
</test>
<doc>Playing around with RFWK and HLTV.org</doc>
<status status="PASS" starttime="20211124 14:52:24.016" endtime="20211124 14:52:45.725"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
